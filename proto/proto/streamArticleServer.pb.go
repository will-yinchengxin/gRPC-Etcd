// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: streamArticleServer.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//ID
type Aid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Aid) Reset() {
	*x = Aid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aid) ProtoMessage() {}

func (x *Aid) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aid.ProtoReflect.Descriptor instead.
func (*Aid) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{0}
}

func (x *Aid) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

//作者
type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{1}
}

func (x *Author) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

//标题
type Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Title) Reset() {
	*x = Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{2}
}

func (x *Title) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

//内容
type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{3}
}

func (x *Content) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 文章信息
type ArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Author  string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{4}
}

func (x *ArticleInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 保存文章信息
type ArticleParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author  *Author  `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Title   *Title   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content *Content `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ArticleParam) Reset() {
	*x = ArticleParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleParam) ProtoMessage() {}

func (x *ArticleParam) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleParam.ProtoReflect.Descriptor instead.
func (*ArticleParam) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{5}
}

func (x *ArticleParam) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ArticleParam) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ArticleParam) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

//删除状态
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code bool `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamArticleServer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_streamArticleServer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_streamArticleServer_proto_rawDescGZIP(), []int{6}
}

func (x *Status) GetCode() bool {
	if x != nil {
		return x.Code
	}
	return false
}

var File_streamArticleServer_proto protoreflect.FileDescriptor

var file_streamArticleServer_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x15, 0x0a, 0x03, 0x41, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x1d, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x65, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xab, 0x01, 0x0a, 0x0d, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b,
	0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x69, 0x64, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x69, 0x64, 0x1a, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x30, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streamArticleServer_proto_rawDescOnce sync.Once
	file_streamArticleServer_proto_rawDescData = file_streamArticleServer_proto_rawDesc
)

func file_streamArticleServer_proto_rawDescGZIP() []byte {
	file_streamArticleServer_proto_rawDescOnce.Do(func() {
		file_streamArticleServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_streamArticleServer_proto_rawDescData)
	})
	return file_streamArticleServer_proto_rawDescData
}

var file_streamArticleServer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_streamArticleServer_proto_goTypes = []interface{}{
	(*Aid)(nil),          // 0: proto.Aid
	(*Author)(nil),       // 1: proto.Author
	(*Title)(nil),        // 2: proto.Title
	(*Content)(nil),      // 3: proto.Content
	(*ArticleInfo)(nil),  // 4: proto.ArticleInfo
	(*ArticleParam)(nil), // 5: proto.ArticleParam
	(*Status)(nil),       // 6: proto.Status
}
var file_streamArticleServer_proto_depIdxs = []int32{
	1, // 0: proto.ArticleParam.author:type_name -> proto.Author
	2, // 1: proto.ArticleParam.title:type_name -> proto.Title
	3, // 2: proto.ArticleParam.content:type_name -> proto.Content
	5, // 3: proto.ArticleServer.SaveArticle:input_type -> proto.ArticleParam
	0, // 4: proto.ArticleServer.GetArticleInfo:input_type -> proto.Aid
	0, // 5: proto.ArticleServer.DeleteArticle:input_type -> proto.Aid
	0, // 6: proto.ArticleServer.SaveArticle:output_type -> proto.Aid
	4, // 7: proto.ArticleServer.GetArticleInfo:output_type -> proto.ArticleInfo
	6, // 8: proto.ArticleServer.DeleteArticle:output_type -> proto.Status
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_streamArticleServer_proto_init() }
func file_streamArticleServer_proto_init() {
	if File_streamArticleServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streamArticleServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamArticleServer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streamArticleServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streamArticleServer_proto_goTypes,
		DependencyIndexes: file_streamArticleServer_proto_depIdxs,
		MessageInfos:      file_streamArticleServer_proto_msgTypes,
	}.Build()
	File_streamArticleServer_proto = out.File
	file_streamArticleServer_proto_rawDesc = nil
	file_streamArticleServer_proto_goTypes = nil
	file_streamArticleServer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ArticleServerClient is the client API for ArticleServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleServerClient interface {
	SaveArticle(ctx context.Context, opts ...grpc.CallOption) (ArticleServer_SaveArticleClient, error)
	GetArticleInfo(ctx context.Context, in *Aid, opts ...grpc.CallOption) (ArticleServer_GetArticleInfoClient, error)
	DeleteArticle(ctx context.Context, opts ...grpc.CallOption) (ArticleServer_DeleteArticleClient, error)
}

type articleServerClient struct {
	cc grpc.ClientConnInterface
}

func NewArticleServerClient(cc grpc.ClientConnInterface) ArticleServerClient {
	return &articleServerClient{cc}
}

func (c *articleServerClient) SaveArticle(ctx context.Context, opts ...grpc.CallOption) (ArticleServer_SaveArticleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ArticleServer_serviceDesc.Streams[0], "/proto.ArticleServer/SaveArticle", opts...)
	if err != nil {
		return nil, err
	}
	x := &articleServerSaveArticleClient{stream}
	return x, nil
}

type ArticleServer_SaveArticleClient interface {
	Send(*ArticleParam) error
	CloseAndRecv() (*Aid, error)
	grpc.ClientStream
}

type articleServerSaveArticleClient struct {
	grpc.ClientStream
}

func (x *articleServerSaveArticleClient) Send(m *ArticleParam) error {
	return x.ClientStream.SendMsg(m)
}

func (x *articleServerSaveArticleClient) CloseAndRecv() (*Aid, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Aid)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *articleServerClient) GetArticleInfo(ctx context.Context, in *Aid, opts ...grpc.CallOption) (ArticleServer_GetArticleInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ArticleServer_serviceDesc.Streams[1], "/proto.ArticleServer/GetArticleInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &articleServerGetArticleInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ArticleServer_GetArticleInfoClient interface {
	Recv() (*ArticleInfo, error)
	grpc.ClientStream
}

type articleServerGetArticleInfoClient struct {
	grpc.ClientStream
}

func (x *articleServerGetArticleInfoClient) Recv() (*ArticleInfo, error) {
	m := new(ArticleInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *articleServerClient) DeleteArticle(ctx context.Context, opts ...grpc.CallOption) (ArticleServer_DeleteArticleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ArticleServer_serviceDesc.Streams[2], "/proto.ArticleServer/DeleteArticle", opts...)
	if err != nil {
		return nil, err
	}
	x := &articleServerDeleteArticleClient{stream}
	return x, nil
}

type ArticleServer_DeleteArticleClient interface {
	Send(*Aid) error
	Recv() (*Status, error)
	grpc.ClientStream
}

type articleServerDeleteArticleClient struct {
	grpc.ClientStream
}

func (x *articleServerDeleteArticleClient) Send(m *Aid) error {
	return x.ClientStream.SendMsg(m)
}

func (x *articleServerDeleteArticleClient) Recv() (*Status, error) {
	m := new(Status)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ArticleServerServer is the server API for ArticleServer service.
type ArticleServerServer interface {
	SaveArticle(ArticleServer_SaveArticleServer) error
	GetArticleInfo(*Aid, ArticleServer_GetArticleInfoServer) error
	DeleteArticle(ArticleServer_DeleteArticleServer) error
}

// UnimplementedArticleServerServer can be embedded to have forward compatible implementations.
type UnimplementedArticleServerServer struct {
}

func (*UnimplementedArticleServerServer) SaveArticle(ArticleServer_SaveArticleServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveArticle not implemented")
}
func (*UnimplementedArticleServerServer) GetArticleInfo(*Aid, ArticleServer_GetArticleInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetArticleInfo not implemented")
}
func (*UnimplementedArticleServerServer) DeleteArticle(ArticleServer_DeleteArticleServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteArticle not implemented")
}

func RegisterArticleServerServer(s *grpc.Server, srv ArticleServerServer) {
	s.RegisterService(&_ArticleServer_serviceDesc, srv)
}

func _ArticleServer_SaveArticle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ArticleServerServer).SaveArticle(&articleServerSaveArticleServer{stream})
}

type ArticleServer_SaveArticleServer interface {
	SendAndClose(*Aid) error
	Recv() (*ArticleParam, error)
	grpc.ServerStream
}

type articleServerSaveArticleServer struct {
	grpc.ServerStream
}

func (x *articleServerSaveArticleServer) SendAndClose(m *Aid) error {
	return x.ServerStream.SendMsg(m)
}

func (x *articleServerSaveArticleServer) Recv() (*ArticleParam, error) {
	m := new(ArticleParam)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ArticleServer_GetArticleInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Aid)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ArticleServerServer).GetArticleInfo(m, &articleServerGetArticleInfoServer{stream})
}

type ArticleServer_GetArticleInfoServer interface {
	Send(*ArticleInfo) error
	grpc.ServerStream
}

type articleServerGetArticleInfoServer struct {
	grpc.ServerStream
}

func (x *articleServerGetArticleInfoServer) Send(m *ArticleInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _ArticleServer_DeleteArticle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ArticleServerServer).DeleteArticle(&articleServerDeleteArticleServer{stream})
}

type ArticleServer_DeleteArticleServer interface {
	Send(*Status) error
	Recv() (*Aid, error)
	grpc.ServerStream
}

type articleServerDeleteArticleServer struct {
	grpc.ServerStream
}

func (x *articleServerDeleteArticleServer) Send(m *Status) error {
	return x.ServerStream.SendMsg(m)
}

func (x *articleServerDeleteArticleServer) Recv() (*Aid, error) {
	m := new(Aid)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ArticleServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ArticleServer",
	HandlerType: (*ArticleServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveArticle",
			Handler:       _ArticleServer_SaveArticle_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetArticleInfo",
			Handler:       _ArticleServer_GetArticleInfo_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DeleteArticle",
			Handler:       _ArticleServer_DeleteArticle_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "streamArticleServer.proto",
}
